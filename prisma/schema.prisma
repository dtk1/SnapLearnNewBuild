generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String            @id @default(uuid())
  name              String
  email             String            @unique
  password          String

  collections       Collection[]
  tasks             Task[]
  pomodoroSessions  PomodoroSession[]
  quizHistories     QuizHistory[] 


  @@map("users")
}

model Collection {
  id         String     @id @default(uuid())
  name       String
  createdAt  DateTime   @default(now())
  flashcards Flashcard[]
  
  userId     String
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Flashcard {
  id           String     @id @default(uuid())
  question     String
  answer       String
  createdAt    DateTime   @default(now())
  collectionId String
  collection   Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)
}

model Task {
  id        String   @id @default(uuid())
  text      String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PomodoroSession {
  id        String   @id @default(uuid())
  mode      String   // focus, shortBreak, longBreak
  duration  Int      // duration in seconds
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
model QuizHistory {
  id        String   @id @default(uuid())
  date      DateTime @default(now())
  score     Int
  totalQuestions Int
  userId    String
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)
  details   Json
}
